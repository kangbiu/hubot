TIMEZONE = "Asia/Hong_Kong"
QUITTING_TIME = '0 0/30 15-23 * * 2-7' # M-S 3pm to 11 pm 0 - 30 mins
RESET_TIME = '0 58 14 * * 2-7' # M-S 2:58 mins 
ROOM = "56489_hubot@conf.hipchat.com"
ALREADY_COMMIT = false

PRODUCTION_DEPLOYMENT_TEXT 	= /(Ship it\!)/
SORRY_TEXT 					= /sorry(.*)/i

sorry_replies = [
	"Love means not ever having to say you're sorry. Strikingly Loves You, so please get it done!"
	"Would 'sorry' have made any difference? No right? So please get it done!"
	"Don't say sorry to me. say sorry to Joe (who is the CXXXO)and he might consider to forgive you. Or please get it done!"
	"S.O.R.R.Y?! Sorry what?! no sorry! go and get the shxt done!"
]

cronJob 	= require('cron').CronJob
Select      = require( "soupselect" ).select
HTMLParser  = require "htmlparser"

module.exports = (robot) ->
	robot.hear PRODUCTION_DEPLOYMENT_TEXT, (msg) ->
		ALREADY_COMMIT = true
		msg.send "Good Job! Time for a 9 gag fun"
		send_meme msg, false, (text)->
			msg.send text
				
	robot.respond SORRY_TEXT, (msg) ->
		msg.send msg.random sorry_replies unless ALREADY_COMMIT is true

	sendCommitReminderToChatRoom = new cronJob QUITTING_TIME, 
		->
			robot.messageRoom ROOM, "Hey! Time to Commit Code!" unless ALREADY_COMMIT is true
			console.log "ALREADY_COMMIT value is #{ALREADY_COMMIT}, NO Message Sent" unless ALREADY_COMMIT is false
		null, 
		true, 
		TIMEZONE

	updateTheFlag = new cronJob RESET_TIME, 
		->
			ALREADY_COMMIT = false
			console.log "ALREADY_COMMIT value is set to #{ALREADY_COMMIT}"
		null, 
		true, 
		TIMEZONE

send_meme = (message, location, response_handler)->
  meme_domain = "http://9gag.com"
  location  ||= "/random"
  if location.substr(0, 4) != "http"
    url = meme_domain + location
  else
    url = location

  message.http( url ).get() (error, response, body)->
    return response_handler "Sorry, something went wrong" if error

    if response.statusCode == 302
      location = response.headers['location']
      return send_meme( message, location, response_handler )

    img_src = get_meme_image( body, ".badge-item-img" )

    if img_src.substr(0, 4) != "http"
      img_src = "http:#{img_src}"

    response_handler img_src

get_meme_image = (body, selector)->
  html_handler  = new HTMLParser.DefaultHandler((()->), ignoreWhitespace: true )
  html_parser   = new HTMLParser.Parser html_handler

  html_parser.parseComplete body
  Select( html_handler.dom, selector )[0].attribs.src
